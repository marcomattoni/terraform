name: Push

on:
  push:
    branches:
      - main

env:
  TF_LOG: INFO

permissions:
  id-token: write
  contents: read

jobs:
  deploy-infra:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout Main repository
        uses: actions/checkout@v2

      # Checkout OPA Policies Repo
      - name: Checkout OPA policies repo
        uses: actions/checkout@v2
        with:
          repository: Marco-Enterprises/Opa-Policies
          token: ${{ secrets.ENTERPRISE_PAT }}
          path: opa  # Important: Specify the path
          ref: main
          fetch-depth: 0      # Fetch all history (recommended)

      # Install the latest version of Terraform CLI
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      # Log into Azure with OIDC integration
      - name: Az CLI login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Run az commands to confirm sub access
      - name: Run az commands
        run: |
          az account show

      - name: Install OPA
        uses: open-policy-agent/setup-opa@v2
        with:
          version: latest

      # Run Terraform init
      - name: Terraform Init
        id: init
        env:
          STORAGE_ACCOUNT: ${{ secrets.STORAGE_ACCOUNT }}
          CONTAINER_NAME: ${{ secrets.CONTAINER_NAME }}
          RESOURCE_GROUP_NAME: ${{ secrets.RESOURCE_GROUP_NAME }}
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        run: terraform init #-backend-config="storage_account_name=$STORAGE_ACCOUNT" -backend-config="container_name=$CONTAINER_NAME" -backend-config="resource_group_name=$RESOURCE_GROUP_NAME"
          
      # Run a Terraform plan
      - name: Terraform plan
        id: plan
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        run: |
          mkdir plan
          terraform plan --out=tfplan

      # Trivy Cache Set up
      - name: Set up cache for Trivy DB
        uses: actions/cache@v3
        with:
          path: ~/.cache/trivy
          key: ${{ runner.os }}-trivy-db
          restore-keys: |
            ${{ runner.os }}-trivy-db

      # Install Trivy
      - name: Install Trivy
        run: |
         curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh
          sudo install ./bin/trivy /usr/local/bin/trivy

      - name: Run Trivy Scan
        run: |
          trivy fs --scanners misconfig,vuln,secret \
          --debug --trace --skip-check-update \
          .
        env:
          TF_LOG: INFO
          TERRAFORM_CLI_PATH: /home/runner/work/_temp/7e8566a8-e7d1-44da-8092-6a69a8d9b8dc

      # Convert the Terraform plan to JSON
      - name: Convert Terraform plan to JSON
        run: |
          terraform show -json tfplan > tfplan.json

      # Run OPA policy check
      #- name: Run OPA Checks
        #run: |
           #result=$(opa exec --bundle prod-policies/Prod-Policies --decision production/deny tfplan.json --format json)
            #echo "$result"
           #if echo "$result" | jq -e '.result[] | select(.result | length > 0) .result' > /dev/null; then
            #echo "Policy denied the action."
            #exit 1
           #else
            #echo "Policy allowed the action."
            #fi

      # Run OPA policy checks
      - name: Run OPA Checks
        run: |
          result=$(opa exec --bundle opa/ --decision data.deny tfplan.json --format json)
          echo "OPA Evaluation Result: $result"
          if echo "$result" | grep -q '"result":\[\]'; then
          echo "All policies allowed the action."
          else
          echo "Some policies denied the action."
          exit 1
          fi
